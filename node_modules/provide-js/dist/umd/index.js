!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports["provide-js"]=t():e["provide-js"]=t()}(this,(function(){return function(e){var t={};function n(a){if(t[a])return t[a].exports;var s=t[a]={i:a,l:!1,exports:{}};return e[a].call(s.exports,s,s.exports,n),s.l=!0,s.exports}return n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(a,s,function(t){return e[t]}.bind(null,s));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=10)}([function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"b",(function(){return u})),n.d(t,"c",(function(){return p})),n.d(t,"d",(function(){return d}));var a=n(1),s=n.n(a),i=n(6);class r{constructor(e,t=r.DEFAULT_SCHEME,n=r.DEFAULT_HOST,a=r.DEFAULT_PATH){this.token=e,this.baseUrl=`${t}://${n}/${a}/`}static handleResponse(e){var t;if(-1!==["PATCH","UPDATE","DELETE"].indexOf(null===(t=e.request)||void 0===t?void 0:t.method)||0===e.headers["content-length"])return e.status>=400?Promise.reject(`failed with ${e.status} status`):Promise.resolve();try{if(e.data instanceof Array){const t=[];return e.data.forEach(e=>{const n=new i.Model;n.unmarshal(JSON.stringify(e)),t.push(n)}),t}const t=new i.Model,n=JSON.stringify(e.data);return t.unmarshal(n),t}catch(e){return Promise.reject("failed to parse response as JSON")}}static toQuery(e){const t=[];for(const n in e)if(e.hasOwnProperty(n)){const a=e[n];if(a instanceof Array)for(const e in a)t.push(encodeURIComponent(n)+"="+encodeURIComponent(a[e]));else t.push(encodeURIComponent(n)+"="+encodeURIComponent(e[n]))}return t.length>0?t.join("&"):""}async get(e,t){return await this.sendRequest("GET",e,t)}async patch(e,t){return await this.sendRequest("PATCH",e,t)}async post(e,t){return await this.sendRequest("POST",e,t)}async put(e,t){return await this.sendRequest("PUT",e,t)}async delete(e){return await this.sendRequest("DELETE",e,null)}async sendRequest(e,t,n=null){let a,i="";null===n?a=void 0:"GET"===e&&Object.keys(n).length>0?i="?"+r.toQuery(n):a=JSON.stringify(n);const c={};this.token&&(c.Authorization="bearer "+this.token),-1!==["POST","PUT"].indexOf(e)&&(c["Content-Type"]="application/json");const o={url:this.baseUrl+t+i,method:e,headers:c,data:null};-1!==["POST","PUT"].indexOf(e)&&(o.data=a);try{return s.a.request(o)}catch(e){return Promise.reject(e)}}}r.DEFAULT_SCHEME="https",r.DEFAULT_HOST="provide.services",r.DEFAULT_PATH="api/v1";var c=n(7),o=n.n(c),l=n(8);class u{constructor(e=u.DEFAULT_SCHEME,t=u.DEFAULT_HOST,n=u.DEFAULT_PORT,a=u.DEFAULT_PATH){this.apiClient=new r(void 0,e,t,a);let s=t;const i=":"+n;t.lastIndexOf(i)===t.length-i.length&&(s=t.substr(0,t.length-i.length)),this.ipfs=new o.a({protocol:e,host:s,port:n,"api-path":a})}add(e,t,n=null){const a=[{path:e,content:t}];return new Promise(async(e,s)=>{const i=[],r=this.ipfs.add(a,n);let c=await r.next();if(c){for(c&&void 0!==c.value&&i.push(c.value);!c.done;)c=await r.next(),c&&void 0!==c.value&&i.push(c.value);e(i)}else s(`failed to add ${t.byteLength}-byte object to IPFS`)})}cat(e){return new Promise(async(t,n)=>{let a;const s=this.ipfs.cat(e);let i=await s.next();if(i){for(a=i.value;!i.done;)i=await s.next();t(a)}else n("failed to cat IPFS object: "+e)})}ls(e){return new Promise((t,n)=>{this.apiClient.get("ls",{arg:e}).then(e=>{const n=[];e.data.Objects.forEach(e=>{e.Links.forEach(e=>{n.push({hash:e.Hash,mime:""===e.Name?null:Object(l.lookup)(e.Name),name:e.Name,size:e.Size,target:""===e.Target?null:e.Target,type:e.Type})})}),t(n)}).catch(e=>{n(e)})})}}u.DEFAULT_SCHEME="http",u.DEFAULT_HOST="ipfs.provide.services",u.DEFAULT_PORT=5001,u.DEFAULT_PATH="/api/v0/",u.DEFAULT_GATEWAY_PORT=8080,u.DEFAULT_GATEWAY_PATH="/ipfs/";var h=n(9);class p{constructor(e,t=p.DEFAULT_SCHEME,n=p.DEFAULT_HOST,a){this.bearerToken=e,this.natsUrl=`${t}://${n}/${a?a+"/":""}`}connect(){const e=h.natsServiceFactory({bearerToken:this.bearerToken,servers:[this.natsUrl]});return e.connect().then(()=>{console.log("NATS connection established to endpoint: "+this.natsUrl),this.service=e})}close(){var e;null===(e=this.service)||void 0===e||e.disconnect()}publish({subject:e,payload:t,reply:n}){var a;return this.service?null===(a=this.service)||void 0===a?void 0:a.publish(e,t,n):Promise.reject("no NATS service available to publish message on subject: "+e)}subscribe({subject:e,onMessage:t}){return this.service?this.service.subscribe(e,t):Promise.reject("no NATS service available to subscribe to subject: "+e)}unsubscribe(e){this.service&&this.service.unsubscribe(e)}request({subject:e,timeout:t,payload:n}){return this.service?this.service.request(e,t,n):Promise.reject("no NATS service available to send request on subject: "+e)}}p.DEFAULT_SCHEME="wss",p.DEFAULT_HOST="websocket.provide.services",p.DEFAULT_PATH="";class d{constructor(e=d.DEFAULT_SCHEME,t=d.DEFAULT_HOST,n=d.DEFAULT_PATH,a=d.DEFAULT_VERSION){this.apiClient=new r(void 0,e,t,n),this.id=1,this.version=a}call(e,t){return new Promise((n,a)=>{this.apiClient.post("",{id:this.id++,version:this.version,method:e,params:t}).then(e=>{e&&e.data&&200===e.status?e.data&&void 0!==e.data.result&&void 0===e.data.error?n(e.data.result):(e.data&&e.data.error,a(e)):a(e)}).catch(e=>{a(e)})})}}d.DEFAULT_SCHEME="http",d.DEFAULT_HOST="localhost:8545",d.DEFAULT_PATH="/",d.DEFAULT_VERSION="2.0"},function(e,t){e.exports=require("axios")},function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return i}));var a=n(0);class s{constructor(e,t,n,i){n||(n=s.DEFAULT_HOST),this.client=new a.a(e,t,n,i)}static clientFactory(t,n,i,r){const c=n||(e.env.IDENT_API_SCHEME||"https"),o=i||(e.env.IDENT_API_HOST||s.DEFAULT_HOST),l=r||(e.env.IDENT_API_PATH||a.a.DEFAULT_PATH);return new s(t,c,o,l)}static unauthenticatedClientFactory(t,n,i,r){const c=n||(e.env.IDENT_API_SCHEME||"https"),o=i||(e.env.IDENT_API_HOST||s.DEFAULT_HOST),l=r||(e.env.IDENT_API_PATH||a.a.DEFAULT_PATH);return new a.a(t,c,o,l)}static async authenticate(e,t,n,i){return a.a.handleResponse(await s.unauthenticatedClientFactory(void 0,t,n,i).post("authenticate",e))}static async createUser(e,t,n,i){return a.a.handleResponse(await s.unauthenticatedClientFactory(void 0,t,n,i).post("users",e))}static async requestPasswordReset(e,t,n,i){return a.a.handleResponse(await s.unauthenticatedClientFactory(void 0,t,n,i).post("reset_password",{email:e}))}static async resetPassword(e,t,n,i,r){return a.a.handleResponse(await s.unauthenticatedClientFactory(void 0,n,i,r).post("reset_password/"+e,{password:t}))}async createApplication(e){return a.a.handleResponse(await this.client.post("applications",e))}async updateApplication(e,t){return a.a.handleResponse(await this.client.put("applications/"+e,t))}async fetchApplications(e){return a.a.handleResponse(await this.client.get("applications",e))}async fetchApplicationDetails(e){return a.a.handleResponse(await this.client.get("applications/"+e,{}))}async fetchApplicationOrganizations(e,t){return a.a.handleResponse(await this.client.get(`applications/${e}/organizations`,t))}async createApplicationOrganization(e,t){return a.a.handleResponse(await this.client.post(`applications/${e}/organizations`,t))}async updateApplicationOrganization(e,t,n){return a.a.handleResponse(await this.client.put(`applications/${e}/organizations/${t}`,n))}async deleteApplicationOrganization(e,t){return a.a.handleResponse(await this.client.delete(`applications/${e}/organizations/${t}`))}async fetchApplicationInvitations(e,t){return a.a.handleResponse(await this.client.get(`applications/${e}/invitations`,t))}async fetchApplicationTokens(e){return a.a.handleResponse(await this.client.get(`applications/${e}/tokens`,{}))}async fetchApplicationUsers(e,t){return a.a.handleResponse(await this.client.get(`applications/${e}/users`,t))}async createApplicationUser(e,t){return a.a.handleResponse(await this.client.post(`applications/${e}/users`,t))}async updateApplicationUser(e,t,n){return a.a.handleResponse(await this.client.put(`applications/${e}/users/${t}`,n))}async deleteApplicationUser(e,t){return a.a.handleResponse(await this.client.delete(`applications/${e}/users/${t}`))}async createOrganization(e){return a.a.handleResponse(await this.client.post("organizations",e))}async fetchOrganizations(e){return a.a.handleResponse(await this.client.get("organizations",e))}async fetchOrganizationDetails(e){return a.a.handleResponse(await this.client.get("organizations/"+e,{}))}async updateOrganization(e,t){return a.a.handleResponse(await this.client.put("organizations/"+e,t))}async fetchOrganizationInvitations(e,t){return a.a.handleResponse(await this.client.get(`organizations/${e}/invitations`,t))}async fetchOrganizationUsers(e,t){return a.a.handleResponse(await this.client.get(`organizations/${e}/users`,t))}async createOrganizationUser(e,t){return a.a.handleResponse(await this.client.post(`organizations/${e}/users`,t))}async updateOrganizationUser(e,t,n){return a.a.handleResponse(await this.client.put(`organizations/${e}/users/${t}`,n))}async deleteOrganizationUser(e,t){return a.a.handleResponse(await this.client.delete(`organizations/${e}/users/${t}`))}async fetchOrganizationVaults(e,t){return a.a.handleResponse(await this.client.get(`organizations/${e}/vaults`,t))}async fetchOrganizationVaultKeys(e,t,n){return a.a.handleResponse(await this.client.get(`organizations/${e}/vaults/${t}/keys`,n))}async createOrganizationVaultKey(e,t,n){return a.a.handleResponse(await this.client.post(`organizations/${e}/vaults/${t}/keys`,n))}async deleteOrganizationVaultKey(e,t,n){return a.a.handleResponse(await this.client.delete(`organizations/${e}/vaults/${t}/keys/${n}`))}async organizationVaultKeySignMessage(e,t,n,s){return a.a.handleResponse(await this.client.post(`organizations/${e}/vaults/${t}/keys/${n}/sign`,{message:s}))}async organizationVaultKeyVerifySignature(e,t,n,s,i){return a.a.handleResponse(await this.client.post(`organizations/${e}/vaults/${t}/keys/${n}/verify`,{message:s,signature:i}))}async fetchOrganizationVaultSecrets(e,t,n){return a.a.handleResponse(await this.client.get(`organizations/${e}/vaults/${t}/secrets`,n))}async createOrganizationVaultSecret(e,t,n){return a.a.handleResponse(await this.client.post(`organizations/${e}/vaults/${t}/secrets`,n))}async deleteOrganizationVaultSecret(e,t,n){return a.a.handleResponse(await this.client.delete(`organizations/${e}/vaults/${t}/secrets/${n}`))}async createToken(e){return a.a.handleResponse(await this.client.post("tokens",e))}async fetchTokens(e){return a.a.handleResponse(await this.client.get("tokens",e))}async fetchTokenDetails(e){return a.a.handleResponse(await this.client.get("tokens/"+e,{}))}async deleteToken(e){return a.a.handleResponse(await this.client.delete("tokens/"+e))}async createInvitation(e){return a.a.handleResponse(await this.client.post("invitations",e))}async createUser(e){return a.a.handleResponse(await this.client.post("users",e))}async fetchUsers(){return a.a.handleResponse(await this.client.get("users",{}))}async fetchUserDetails(e){return a.a.handleResponse(await this.client.get("users/"+e,{}))}async updateUser(e,t){return a.a.handleResponse(await this.client.put("users/"+e,t))}}s.DEFAULT_HOST="ident.provide.services";const i=(e,t,n,a)=>s.clientFactory(e,t,n,a)}).call(this,n(3))},function(e,t){var n,a,s=e.exports={};function i(){throw new Error("setTimeout has not been defined")}function r(){throw new Error("clearTimeout has not been defined")}function c(e){if(n===setTimeout)return setTimeout(e,0);if((n===i||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:i}catch(e){n=i}try{a="function"==typeof clearTimeout?clearTimeout:r}catch(e){a=r}}();var o,l=[],u=!1,h=-1;function p(){u&&o&&(u=!1,o.length?l=o.concat(l):h=-1,l.length&&d())}function d(){if(!u){var e=c(p);u=!0;for(var t=l.length;t;){for(o=l,l=[];++h<t;)o&&o[h].run();h=-1,t=l.length}o=null,u=!1,function(e){if(a===clearTimeout)return clearTimeout(e);if((a===r||!a)&&clearTimeout)return a=clearTimeout,clearTimeout(e);try{a(e)}catch(t){try{return a.call(null,e)}catch(t){return a.call(this,e)}}}(e)}}function y(e,t){this.fun=e,this.array=t}function f(){}s.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];l.push(new y(e,t)),1!==l.length||u||c(d)},y.prototype.run=function(){this.fun.apply(null,this.array)},s.title="browser",s.browser=!0,s.env={},s.argv=[],s.version="",s.versions={},s.on=f,s.addListener=f,s.once=f,s.off=f,s.removeListener=f,s.removeAllListeners=f,s.emit=f,s.prependListener=f,s.prependOnceListener=f,s.listeners=function(e){return[]},s.binding=function(e){throw new Error("process.binding is not supported")},s.cwd=function(){return"/"},s.chdir=function(e){throw new Error("process.chdir is not supported")},s.umask=function(){return 0}},function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return i}));var a=n(0);class s{constructor(e,t,n,i){n||(n=s.DEFAULT_HOST),this.client=new a.a(e,t,n,i)}static clientFactory(t,n,i,r){const c=n||(e.env.NCHAIN_API_SCHEME||"https"),o=i||(e.env.NCHAIN_API_HOST||s.DEFAULT_HOST),l=r||(e.env.NCHAIN_API_PATH||a.a.DEFAULT_PATH);return new s(t,c,o,l)}async fetchAccounts(e){return a.a.handleResponse(await this.client.get("accounts",e||{}))}async fetchAccountDetails(e){return a.a.handleResponse(await this.client.get("accounts/"+e,{}))}async fetchAccountBalance(e,t){return a.a.handleResponse(await this.client.get(`accounts/${e}/balances/${t}`,{}))}async createAccount(e){return a.a.handleResponse(await this.client.post("accounts",e))}async fetchBridges(e){return a.a.handleResponse(await this.client.get("bridges",e||{}))}async fetchBridgeDetails(e){return a.a.handleResponse(await this.client.get("bridges/"+e,{}))}async createBridge(e){return a.a.handleResponse(await this.client.post("bridges",e))}async fetchConnectors(e){return a.a.handleResponse(await this.client.get("connectors",e||{}))}async fetchConnectorDetails(e,t){return a.a.handleResponse(await this.client.get("connectors/"+e,t||{}))}async fetchConnectorLoadBalancers(e,t){return a.a.handleResponse(await this.client.get(`connectors/${e}/load_balancers`,t||{}))}async fetchConnectorNodes(e,t){return a.a.handleResponse(await this.client.get(`connectors/${e}/nodes`,t||{}))}async createConnector(e){return a.a.handleResponse(await this.client.post("connectors",e))}async deleteConnector(e){return a.a.handleResponse(await this.client.delete("connectors/"+e))}async authorizeConnectorSubscription(e,t){return a.a.handleResponse(await this.client.post(`connectors/${e}/subscriptions`,t))}async authorizeContractSubscription(e,t){return a.a.handleResponse(await this.client.post(`contracts/${e}/subscriptions`,t))}async createConnectedEntity(e,t){return a.a.handleResponse(await this.client.post(`connectors/${e}/entities`,t))}async fetchConnectedEntities(e,t){return a.a.handleResponse(await this.client.get(`connectors/${e}/entities`,t))}async fetchConnectedEntityDetails(e,t,n){return a.a.handleResponse(await this.client.get(`connectors/${e}/entities/${t}`,n||{}))}async updateConnectedEntity(e,t,n){return a.a.handleResponse(await this.client.put(`connectors/${e}/entities/${t}`,n))}async deleteConnectedEntity(e,t){return a.a.handleResponse(await this.client.delete(`connectors/${e}/entities/${t}`))}async fetchContracts(e){return a.a.handleResponse(await this.client.get("contracts",e||{}))}async fetchContractDetails(e){return a.a.handleResponse(await this.client.get("contracts/"+e,{}))}async createContract(e){return a.a.handleResponse(await this.client.post("contracts",e))}async executeContract(e,t){return a.a.handleResponse(await this.client.post(`contracts/${e}/execute`,t))}async fetchNetworks(e){return a.a.handleResponse(await this.client.get("networks",e||{}))}async createNetwork(e){return a.a.handleResponse(await this.client.post("networks",e))}async updateNetwork(e,t){return a.a.handleResponse(await this.client.put("networks/"+e,t))}async fetchNetworkDetails(e){return a.a.handleResponse(await this.client.get("networks/"+e,{}))}async fetchNetworkAccounts(e,t){return a.a.handleResponse(await this.client.get(`networks/${e}/accounts`,t))}async fetchNetworkBlocks(e,t){return a.a.handleResponse(await this.client.get(`networks/${e}/blocks`,t))}async fetchNetworkBridges(e,t){return a.a.handleResponse(await this.client.get(`networks/${e}/bridges`,t))}async fetchNetworkConnectors(e,t){return a.a.handleResponse(await this.client.get(`networks/${e}/connectors`,t))}async fetchNetworkContracts(e,t){return a.a.handleResponse(await this.client.get(`networks/${e}/contracts`,t))}async fetchNetworkContractDetails(e,t){return a.a.handleResponse(await this.client.get(`networks/${e}/contracts/${t}`,{}))}async fetchNetworkOracles(e,t){return a.a.handleResponse(await this.client.get(`networks/${e}/oracles`,t))}async fetchNetworkTokens(e,t){return a.a.handleResponse(await this.client.get(`networks/${e}/tokens`,t))}async fetchNetworkTransactions(e,t){return a.a.handleResponse(await this.client.get(`networks/${e}/transactions`,t))}async fetchNetworkTransactionDetails(e,t){return a.a.handleResponse(await this.client.get(`networks/${e}/transactions/${t}`,{}))}async fetchNetworkStatus(e){return a.a.handleResponse(await this.client.get(`networks/${e}/status`,{}))}async fetchNetworkNodes(e,t){return a.a.handleResponse(await this.client.get(`networks/${e}/nodes`,t||{}))}async createNetworkNode(e,t){return a.a.handleResponse(await this.client.post(`networks/${e}/nodes`,t))}async fetchNetworkNodeDetails(e,t){return a.a.handleResponse(await this.client.get(`networks/${e}/nodes/${t}`,{}))}async fetchNetworkNodeLogs(e,t,n){return a.a.handleResponse(await this.client.get(`networks/${e}/nodes/${t}/logs`,n||{}))}async deleteNetworkNode(e,t){return a.a.handleResponse(await this.client.delete(`networks/${e}/nodes/${t}`))}async fetchOracles(e){return a.a.handleResponse(await this.client.get("oracles",e||{}))}async fetchOracleDetails(e){return a.a.handleResponse(await this.client.get("oracles/"+e,{}))}async createOracle(e){return a.a.handleResponse(await this.client.post("oracles",e))}async fetchTokens(e){return a.a.handleResponse(await this.client.get("tokens",e||{}))}async fetchTokenDetails(e){return a.a.handleResponse(await this.client.get("tokens/"+e,{}))}async createToken(e){return a.a.handleResponse(await this.client.post("tokens",e))}async createTransaction(e){return a.a.handleResponse(await this.client.post("transactions",e))}async fetchTransactions(e){return a.a.handleResponse(await this.client.get("transactions",e||{}))}async fetchTransactionDetails(e){return a.a.handleResponse(await this.client.get("transactions/"+e,{}))}async fetchWallets(e){return a.a.handleResponse(await this.client.get("wallets",e||{}))}async fetchWalletAccounts(e){return a.a.handleResponse(await this.client.get(`wallets/${e}/accounts`,{}))}async fetchWalletDetails(e){return a.a.handleResponse(await this.client.get("wallets/"+e,{}))}async createWallet(e){return a.a.handleResponse(await this.client.post("wallets",e))}}s.DEFAULT_HOST="nchain.provide.services";const i=(e,t,n,a)=>s.clientFactory(e,t,n,a)}).call(this,n(3))},function(e,t,n){"use strict";(function(e){n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return i}));var a=n(0);class s{constructor(e,t,n,i){n||(n=s.DEFAULT_HOST),this.client=new a.a(e,t,n,i)}static clientFactory(t,n,i,r){const c=n||(e.env.VAULT_API_SCHEME||"https"),o=i||(e.env.VAULT_API_HOST||s.DEFAULT_HOST),l=r||(e.env.VAULT_API_PATH||a.a.DEFAULT_PATH);return new s(t,c,o,l)}async createVault(e){return a.a.handleResponse(await this.client.post("vaults",e))}async fetchVaults(e){return a.a.handleResponse(await this.client.get("vaults",e))}async fetchVaultKeys(e,t){return a.a.handleResponse(await this.client.get(`vaults/${e}/keys`,t))}async createVaultKey(e,t){return a.a.handleResponse(await this.client.post(`vaults/${e}/keys`,t))}async deleteVaultKey(e,t){return a.a.handleResponse(await this.client.delete(`vaults/${e}/keys/${t}`))}async encrypt(e,t,n){return a.a.handleResponse(await this.client.post(`vaults/${e}/keys/${t}/encrypt`,{message:n}))}async decrypt(e,t,n){return a.a.handleResponse(await this.client.post(`vaults/${e}/keys/${t}/decrypt`,{message:n}))}async signMessage(e,t,n){return a.a.handleResponse(await this.client.post(`vaults/${e}/keys/${t}/sign`,{message:n}))}async verifySignature(e,t,n,s){return a.a.handleResponse(await this.client.post(`vaults/${e}/keys/${t}/verify`,{message:n,signature:s}))}async fetchVaultSecrets(e,t){return a.a.handleResponse(await this.client.get(`vaults/${e}/secrets`,t))}async createVaultSecret(e,t){return a.a.handleResponse(await this.client.post(`vaults/${e}/secrets`,t))}async deleteVaultSecret(e,t){return a.a.handleResponse(await this.client.delete(`vaults/${e}/secrets/${t}`))}}s.DEFAULT_HOST="vault.provide.services";const i=(e,t,n,a)=>s.clientFactory(e,t,n,a)}).call(this,n(3))},function(e,t){e.exports=require("@provide/types")},function(e,t){e.exports=require("ipfs-http-client")},function(e,t){e.exports=require("mime-types")},function(e,t){e.exports=require("ts-natsutil")},function(e,t,n){"use strict";n.r(t),n.d(t,"ApiClient",(function(){return a.a})),n.d(t,"IpfsClient",(function(){return a.b})),n.d(t,"NatsClientFacade",(function(){return a.c})),n.d(t,"RpcClient",(function(){return a.d})),n.d(t,"Capabilities",(function(){return r})),n.d(t,"capabilitiesFactory",(function(){return c})),n.d(t,"Ident",(function(){return o.a})),n.d(t,"identClientFactory",(function(){return o.b})),n.d(t,"NChain",(function(){return l.a})),n.d(t,"nchainClientFactory",(function(){return l.b})),n.d(t,"Vault",(function(){return u.a})),n.d(t,"vaultClientFactory",(function(){return u.b}));var a=n(0),s=n(1),i=n.n(s);class r{constructor(e){this.manifestUrl=e||r.capabilitiesManifestUrl}async fetch(){return i.a.get(this.manifestUrl).then(e=>{200===e.status&&(this.capabilities=e.data)})}getBaselineRegistryContracts(){var e;if(this.capabilities)return null===(e=this.capabilities.baseline)||void 0===e?void 0:e.contracts}getRegistryContracts(){var e;if(this.capabilities)return null===(e=this.capabilities.message_bus)||void 0===e?void 0:e.registry_contracts}}r.capabilitiesManifestUrl="https://s3.amazonaws.com/static.provide.services/capabilities/provide-capabilities-manifest.json";const c=()=>{const e=new r;return e.fetch(),e};var o=n(2),l=n(4),u=n(5)}])}));