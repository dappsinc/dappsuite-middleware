export declare class WhisperService {
    keyId: string;
    private clientUrl;
    private connectedInterval;
    private web3Connected;
    constructor(config: any);
    private initConnectedInterval;
    private stopConnectedInterval;
    connect(): Promise<any>;
    disconnect(): Promise<void>;
    isConnected(): boolean;
    publish(subject: string | undefined, payload: any, reply: any, recipientId: string, senderId: string): Promise<any>;
    subscribe(subject: string | undefined, callback: (msg: any) => void, myId: string): Promise<void>;
    loadIdentities(identities: any, topic: string | undefined, callback: any): Promise<object[]>;
    createIdentity(topic: string | undefined, callback: any): Promise<{
        publicKey: any;
        privateKey: any;
        keyId: any;
        createdDate: number;
    }>;
}
//# sourceMappingURL=whisper.d.ts.map