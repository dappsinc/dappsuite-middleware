import { ComputationResult, CompilationArtifacts, ResolveCallback, SetupKeypair, ZoKratesProvider } from 'zokrates-js';
import { IZKSnarkCircuitProvider } from '.';
export declare class ZokratesTrustedSetupArtifact {
    keypair?: SetupKeypair;
    verifierSource?: string;
}
export declare class ZoKratesService implements IZKSnarkCircuitProvider {
    private importResolver;
    private zokrates;
    constructor(zokrates: ZoKratesProvider, importResolver: ResolveCallback);
    compile(source: string, location: string): Promise<CompilationArtifacts>;
    computeWitness(artifacts: CompilationArtifacts, args: any[]): Promise<ComputationResult>;
    exportVerifier(verifyingKey: any): Promise<string>;
    generateProof(circuit: any, witness: any, provingKey: any): Promise<string>;
    setup(circuit: any): Promise<ZokratesTrustedSetupArtifact>;
}
export declare const zokratesServiceFactory: (config?: any) => Promise<ZoKratesService>;
//# sourceMappingURL=zokrates.d.ts.map