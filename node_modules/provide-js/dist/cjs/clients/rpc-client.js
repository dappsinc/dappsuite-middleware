"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RpcClient = void 0;
const api_client_1 = require("./api-client");
class RpcClient {
    constructor(scheme = RpcClient.DEFAULT_SCHEME, host = RpcClient.DEFAULT_HOST, path = RpcClient.DEFAULT_PATH, version = RpcClient.DEFAULT_VERSION) {
        this.apiClient = new api_client_1.ApiClient(undefined, scheme, host, path);
        this.id = 1;
        this.version = version;
    }
    call(method, params) {
        return new Promise((resolve, reject) => {
            this.apiClient.post('', {
                id: this.id++,
                version: this.version,
                method: method,
                params: params,
            }).then((resp) => {
                if (resp && resp.xhr && resp.responseBody && resp.xhr.status === 200) {
                    const response = JSON.parse(resp.responseBody);
                    if (response && typeof response.result !== 'undefined' && typeof response.error === 'undefined') {
                        resolve(response.result);
                    }
                    else if (response && response.error) {
                        reject(response);
                    }
                    else {
                        reject(response);
                    }
                }
                else {
                    reject(resp);
                }
            }).catch((err) => {
                reject(err);
            });
        });
    }
}
exports.RpcClient = RpcClient;
RpcClient.DEFAULT_SCHEME = 'http';
RpcClient.DEFAULT_HOST = 'localhost:8545';
RpcClient.DEFAULT_PATH = '/';
RpcClient.DEFAULT_VERSION = '2.0';
//# sourceMappingURL=rpc-client.js.map