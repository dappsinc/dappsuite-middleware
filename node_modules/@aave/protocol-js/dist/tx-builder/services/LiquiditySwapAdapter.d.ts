import { ISwapCollateral } from '../contract-types';
import LiquiditySwapAdapterInterface from '../interfaces/LiquiditySwapAdapter';
import { Configuration, EthereumTransactionTypeExtended } from '../types';
import { SwapAndDepositMethodType } from '../types/LiquiditySwapAdapterMethodTypes';
import BaseService from './BaseService';
export default class LiquiditySwapAdapterService extends BaseService<ISwapCollateral> implements LiquiditySwapAdapterInterface {
    readonly liquiditySwapAdapterAddress: string;
    constructor(config: Configuration);
    swapAndDeposit({ user, assetToSwapFrom, assetToSwapTo, amountToSwap, minAmountToReceive, permitParams, useEthPath, }: SwapAndDepositMethodType): EthereumTransactionTypeExtended;
}
