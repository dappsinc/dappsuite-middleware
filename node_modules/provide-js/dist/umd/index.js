!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports["provide-js"]=e():t["provide-js"]=e()}(this,(function(){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=10)}([function(t,e,n){"use strict";n.d(e,"a",(function(){return c})),n.d(e,"b",(function(){return o})),n.d(e,"c",(function(){return h})),n.d(e,"d",(function(){return d})),n.d(e,"e",(function(){return f}));var r=n(1),i=n.n(r),s=n(6);class o{constructor(t,e,n,r,i,s){this.query=t,this.requestBody=e,this.responseBody=r,this.responseHeaders=i,this.xhr=s;let o="";Object.keys(n).forEach(t=>{o+=`${t}: ${n[t]}\n`}),""!==o&&(this.requestHeaders=o)}unmarshalResponse(t){let e;const n=this.xhr.getResponseHeader("content-length");if(null!==t&&null!==n&&parseInt(n,10)>=2){const n=Object(s.unmarshal)(this.responseBody,t);null!=n&&(e=n)}return e}}class c{constructor(t,e=c.DEFAULT_SCHEME,n=c.DEFAULT_HOST,r=c.DEFAULT_PATH){this.token=t,this.baseUrl=`${e}://${n}/${r}/`}static toQuery(t){const e=[];for(const n in t)if(t.hasOwnProperty(n)){const r=t[n];if(r instanceof Array)for(const t in r)e.push(encodeURIComponent(n)+"="+encodeURIComponent(r[t]));else e.push(encodeURIComponent(n)+"="+encodeURIComponent(t[n]))}return e.length>0?e.join("&"):""}async get(t,e){return await this.sendRequest("GET",t,e)}async patch(t,e){return await this.sendRequest("PATCH",t,e)}async post(t,e){return await this.sendRequest("POST",t,e)}async put(t,e){return await this.sendRequest("PUT",t,e)}async delete(t){return await this.sendRequest("DELETE",t,null)}async sendRequest(t,e,n=null){var r;let s,a="";null===n?s=void 0:"GET"===t&&Object.keys(n).length>0?a="?"+c.toQuery(n):s=JSON.stringify(n);const u={};this.token&&(u.Authorization="bearer "+this.token),-1!==["POST","PUT"].indexOf(t)&&(u["Content-Type"]="application/json");const l={url:this.baseUrl+e+a,method:t,headers:u,data:null};let h;-1!==["POST","PUT"].indexOf(t)&&(l.data=s);try{return h=await i.a.request(l),new o(a,s,u,h.data,h.headers,null===(r=h.request)||void 0===r?void 0:r.xhr)}catch(t){return Promise.reject(t)}}}c.DEFAULT_SCHEME="https",c.DEFAULT_HOST="provide.services",c.DEFAULT_PATH="api/v1";var a=n(7),u=n.n(a),l=n(8);class h{constructor(t=h.DEFAULT_SCHEME,e=h.DEFAULT_HOST,n=h.DEFAULT_PORT,r=h.DEFAULT_PATH){this.apiClient=new c(void 0,t,e,r);let i=e;const s=":"+n;e.lastIndexOf(s)===e.length-s.length&&(i=e.substr(0,e.length-s.length)),this.ipfs=new u.a({protocol:t,host:i,port:n,"api-path":r})}add(t,e,n=null){const r=[{path:t,content:e}];return new Promise(async(t,i)=>{const s=[],o=this.ipfs.add(r,n);let c=await o.next();if(c){for(c&&void 0!==c.value&&s.push(c.value);!c.done;)c=await o.next(),c&&void 0!==c.value&&s.push(c.value);t(s)}else i(`failed to add ${e.byteLength}-byte object to IPFS`)})}cat(t){return new Promise(async(e,n)=>{let r;const i=this.ipfs.cat(t);let s=await i.next();if(s){for(r=s.value;!s.done;)s=await i.next();e(r)}else n("failed to cat IPFS object: "+t)})}ls(t){return new Promise((e,n)=>{this.apiClient.get("ls",{arg:t}).then(t=>{const n=[];JSON.parse(t.responseBody).Objects.forEach(t=>{t.Links.forEach(t=>{n.push({hash:t.Hash,mime:""===t.Name?null:Object(l.lookup)(t.Name),name:t.Name,size:t.Size,target:""===t.Target?null:t.Target,type:t.Type})})}),e(n)}).catch(t=>{n(t)})})}}h.DEFAULT_SCHEME="http",h.DEFAULT_HOST="ipfs.provide.services",h.DEFAULT_PORT=5001,h.DEFAULT_PATH="/api/v0/",h.DEFAULT_GATEWAY_PORT=8080,h.DEFAULT_GATEWAY_PATH="/ipfs/";var p=n(9);class d{constructor(t,e=d.DEFAULT_SCHEME,n=d.DEFAULT_HOST,r){this.bearerToken=t,this.natsUrl=`${e}://${n}/${r?r+"/":""}`}connect(){const t=p.natsServiceFactory({bearerToken:this.bearerToken,servers:[this.natsUrl]});return t.connect().then(()=>{console.log("NATS connection established to endpoint: "+this.natsUrl),this.service=t})}close(){var t;null===(t=this.service)||void 0===t||t.disconnect()}publish({subject:t,payload:e,reply:n}){var r;return this.service?null===(r=this.service)||void 0===r?void 0:r.publish(t,e,n):Promise.reject("no NATS service available to publish message on subject: "+t)}subscribe({subject:t,onMessage:e}){return this.service?this.service.subscribe(t,e):Promise.reject("no NATS service available to subscribe to subject: "+t)}unsubscribe(t){this.service&&this.service.unsubscribe(t)}request({subject:t,timeout:e,payload:n}){return this.service?this.service.request(t,e,n):Promise.reject("no NATS service available to send request on subject: "+t)}}d.DEFAULT_SCHEME="wss",d.DEFAULT_HOST="websocket.provide.services",d.DEFAULT_PATH="";class f{constructor(t=f.DEFAULT_SCHEME,e=f.DEFAULT_HOST,n=f.DEFAULT_PATH,r=f.DEFAULT_VERSION){this.apiClient=new c(void 0,t,e,n),this.id=1,this.version=r}call(t,e){return new Promise((n,r)=>{this.apiClient.post("",{id:this.id++,version:this.version,method:t,params:e}).then(t=>{if(t&&t.xhr&&t.responseBody&&200===t.xhr.status){const e=JSON.parse(t.responseBody);e&&void 0!==e.result&&void 0===e.error?n(e.result):(e&&e.error,r(e))}else r(t)}).catch(t=>{r(t)})})}}f.DEFAULT_SCHEME="http",f.DEFAULT_HOST="localhost:8545",f.DEFAULT_PATH="/",f.DEFAULT_VERSION="2.0"},function(t,e){t.exports=require("axios")},function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return i})),n.d(e,"b",(function(){return s}));var r=n(0);class i{constructor(t,e,n,s){n||(n=i.DEFAULT_HOST),this.client=new r.a(t,e,n,s)}static clientFactory(e,n,s,o){const c=n||(t.env.IDENT_API_SCHEME||"https"),a=s||(t.env.IDENT_API_HOST||i.DEFAULT_HOST),u=o||(t.env.IDENT_API_PATH||r.a.DEFAULT_PATH);return new i(e,c,a,u)}static unauthenticatedClientFactory(e,n,s,o){const c=n||(t.env.IDENT_API_SCHEME||"https"),a=s||(t.env.IDENT_API_HOST||i.DEFAULT_HOST),u=o||(t.env.IDENT_API_PATH||r.a.DEFAULT_PATH);return new r.a(e,c,a,u)}static authenticate(t,e,n,r){return i.unauthenticatedClientFactory(void 0,e,n,r).post("authenticate",t)}static createUser(t,e,n,r){return i.unauthenticatedClientFactory(void 0,e,n,r).post("users",t)}static requestPasswordReset(t,e,n,r){return i.unauthenticatedClientFactory(void 0,e,n,r).post("reset_password",{email:t})}static resetPassword(t,e,n,r,s){return i.unauthenticatedClientFactory(void 0,n,r,s).post("reset_password/"+t,{password:e})}createApplication(t){return this.client.post("applications",t)}updateApplication(t,e){return this.client.put("applications/"+t,e)}fetchApplications(t){return this.client.get("applications",t)}fetchApplicationDetails(t){return this.client.get("applications/"+t,{})}fetchApplicationOrganizations(t,e){return this.client.get(`applications/${t}/organizations`,e)}createApplicationOrganization(t,e){return this.client.post(`applications/${t}/organizations`,e)}updateApplicationOrganization(t,e,n){return this.client.put(`applications/${t}/organizations/${e}`,n)}deleteApplicationOrganization(t,e){return this.client.delete(`applications/${t}/organizations/${e}`)}fetchApplicationInvitations(t,e){return this.client.get(`applications/${t}/invitations`,e)}fetchApplicationTokens(t){return this.client.get(`applications/${t}/tokens`,{})}fetchApplicationUsers(t,e){return this.client.get(`applications/${t}/users`,e)}createApplicationUser(t,e){return this.client.post(`applications/${t}/users`,e)}updateApplicationUser(t,e,n){return this.client.put(`applications/${t}/users/${e}`,n)}deleteApplicationUser(t,e){return this.client.delete(`applications/${t}/users/${e}`)}createOrganization(t){return this.client.post("organizations",t)}fetchOrganizations(t){return this.client.get("organizations",t)}fetchOrganizationDetails(t){return this.client.get("organizations/"+t,{})}updateOrganization(t,e){return this.client.put("organizations/"+t,e)}fetchOrganizationInvitations(t,e){return this.client.get(`organizations/${t}/invitations`,e)}fetchOrganizationUsers(t,e){return this.client.get(`organizations/${t}/users`,e)}createOrganizationUser(t,e){return this.client.post(`organizations/${t}/users`,e)}updateOrganizationUser(t,e,n){return this.client.put(`organizations/${t}/users/${e}`,n)}deleteOrganizationUser(t,e){return this.client.delete(`organizations/${t}/users/${e}`)}fetchOrganizationVaults(t,e){return this.client.get(`organizations/${t}/vaults`,e)}fetchOrganizationVaultKeys(t,e,n){return this.client.get(`organizations/${t}/vaults/${e}/keys`,n)}createOrganizationVaultKey(t,e,n){return this.client.post(`organizations/${t}/vaults/${e}/keys`,n)}deleteOrganizationVaultKey(t,e,n){return this.client.delete(`organizations/${t}/vaults/${e}/keys/${n}`)}organizationVaultKeySignMessage(t,e,n,r){return this.client.post(`organizations/${t}/vaults/${e}/keys/${n}/sign`,{message:r})}organizationVaultKeyVerifySignature(t,e,n,r,i){return this.client.post(`organizations/${t}/vaults/${e}/keys/${n}/verify`,{message:r,signature:i})}fetchOrganizationVaultSecrets(t,e,n){return this.client.get(`organizations/${t}/vaults/${e}/secrets`,n)}createOrganizationVaultSecret(t,e,n){return this.client.post(`organizations/${t}/vaults/${e}/secrets`,n)}deleteOrganizationVaultSecret(t,e,n){return this.client.delete(`organizations/${t}/vaults/${e}/secrets/${n}`)}createToken(t){return this.client.post("tokens",t)}fetchTokens(t){return this.client.get("tokens",t)}fetchTokenDetails(t){return this.client.get("tokens/"+t,{})}deleteToken(t){return this.client.delete("tokens/"+t)}createInvitation(t){return this.client.post("invitations",t)}createUser(t){return this.client.post("users",t)}fetchUsers(){return this.client.get("users",{})}fetchUserDetails(t){return this.client.get("users/"+t,{})}updateUser(t,e){return this.client.put("users/"+t,e)}}i.DEFAULT_HOST="ident.provide.services";const s=(t,e,n,r)=>i.clientFactory(t,e,n,r)}).call(this,n(3))},function(t,e){var n,r,i=t.exports={};function s(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function c(t){if(n===setTimeout)return setTimeout(t,0);if((n===s||!n)&&setTimeout)return n=setTimeout,setTimeout(t,0);try{return n(t,0)}catch(e){try{return n.call(null,t,0)}catch(e){return n.call(this,t,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:s}catch(t){n=s}try{r="function"==typeof clearTimeout?clearTimeout:o}catch(t){r=o}}();var a,u=[],l=!1,h=-1;function p(){l&&a&&(l=!1,a.length?u=a.concat(u):h=-1,u.length&&d())}function d(){if(!l){var t=c(p);l=!0;for(var e=u.length;e;){for(a=u,u=[];++h<e;)a&&a[h].run();h=-1,e=u.length}a=null,l=!1,function(t){if(r===clearTimeout)return clearTimeout(t);if((r===o||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(t);try{r(t)}catch(e){try{return r.call(null,t)}catch(e){return r.call(this,t)}}}(t)}}function f(t,e){this.fun=t,this.array=e}function g(){}i.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];u.push(new f(t,e)),1!==u.length||l||c(d)},f.prototype.run=function(){this.fun.apply(null,this.array)},i.title="browser",i.browser=!0,i.env={},i.argv=[],i.version="",i.versions={},i.on=g,i.addListener=g,i.once=g,i.off=g,i.removeListener=g,i.removeAllListeners=g,i.emit=g,i.prependListener=g,i.prependOnceListener=g,i.listeners=function(t){return[]},i.binding=function(t){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(t){throw new Error("process.chdir is not supported")},i.umask=function(){return 0}},function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return i})),n.d(e,"b",(function(){return s}));var r=n(0);class i{constructor(t,e,n,s){n||(n=i.DEFAULT_HOST),this.client=new r.a(t,e,n,s)}static clientFactory(e,n,s,o){const c=n||(t.env.NCHAIN_API_SCHEME||"https"),a=s||(t.env.NCHAIN_API_HOST||i.DEFAULT_HOST),u=o||(t.env.NCHAIN_API_PATH||r.a.DEFAULT_PATH);return new i(e,c,a,u)}fetchAccounts(t){return this.client.get("accounts",t||{})}fetchAccountDetails(t){return this.client.get("accounts/"+t,{})}fetchAccountBalance(t,e){return this.client.get(`accounts/${t}/balances/${e}`,{})}createAccount(t){return this.client.post("accounts",t)}fetchBridges(t){return this.client.get("bridges",t||{})}fetchBridgeDetails(t){return this.client.get("bridges/"+t,{})}createBridge(t){return this.client.post("bridges",t)}fetchConnectors(t){return this.client.get("connectors",t||{})}fetchConnectorDetails(t,e){return this.client.get("connectors/"+t,e||{})}fetchConnectorLoadBalancers(t,e){return this.client.get(`connectors/${t}/load_balancers`,e||{})}fetchConnectorNodes(t,e){return this.client.get(`connectors/${t}/nodes`,e||{})}createConnector(t){return this.client.post("connectors",t)}deleteConnector(t){return this.client.delete("connectors/"+t)}authorizeConnectorSubscription(t,e){return this.client.post(`connectors/${t}/subscriptions`,e)}authorizeContractSubscription(t,e){return this.client.post(`contracts/${t}/subscriptions`,e)}createConnectedEntity(t,e){return this.client.post(`connectors/${t}/entities`,e)}fetchConnectedEntities(t,e){return this.client.get(`connectors/${t}/entities`,e)}fetchConnectedEntityDetails(t,e,n){return this.client.get(`connectors/${t}/entities/${e}`,n||{})}updateConnectedEntity(t,e,n){return this.client.put(`connectors/${t}/entities/${e}`,n)}deleteConnectedEntity(t,e){return this.client.delete(`connectors/${t}/entities/${e}`)}fetchContracts(t){return this.client.get("contracts",t||{})}fetchContractDetails(t){return this.client.get("contracts/"+t,{})}createContract(t){return this.client.post("contracts",t)}executeContract(t,e){return this.client.post(`contracts/${t}/execute`,e)}fetchNetworks(t){return this.client.get("networks",t||{})}createNetwork(t){return this.client.post("networks",t)}updateNetwork(t,e){return this.client.put("networks/"+t,e)}fetchNetworkDetails(t){return this.client.get("networks/"+t,{})}fetchNetworkAccounts(t,e){return this.client.get(`networks/${t}/accounts`,e)}fetchNetworkBlocks(t,e){return this.client.get(`networks/${t}/blocks`,e)}fetchNetworkBridges(t,e){return this.client.get(`networks/${t}/bridges`,e)}fetchNetworkConnectors(t,e){return this.client.get(`networks/${t}/connectors`,e)}fetchNetworkContracts(t,e){return this.client.get(`networks/${t}/contracts`,e)}fetchNetworkContractDetails(t,e){return this.client.get(`networks/${t}/contracts/${e}`,{})}fetchNetworkOracles(t,e){return this.client.get(`networks/${t}/oracles`,e)}fetchNetworkTokens(t,e){return this.client.get(`networks/${t}/tokens`,e)}network_transactions(t,e){return this.client.get(`networks/${t}/transactions`,e)}fetchNetworkTransactionDetails(t,e){return this.client.get(`networks/${t}/transactions/${e}`,{})}fetchNetworkStatus(t){return this.client.get(`networks/${t}/status`,{})}fetchNetworkNodes(t,e){return this.client.get(`networks/${t}/nodes`,e||{})}createNetworkNode(t,e){return this.client.post(`networks/${t}/nodes`,e)}fetchNetworkNodeDetails(t,e){return this.client.get(`networks/${t}/nodes/${e}`,{})}fetchNetworkNodeLogs(t,e,n){return this.client.get(`networks/${t}/nodes/${e}/logs`,n||{})}deleteNetworkNode(t,e){return this.client.delete(`networks/${t}/nodes/${e}`)}fetchOracles(t){return this.client.get("oracles",t||{})}fetchOracleDetails(t){return this.client.get("oracles/"+t,{})}createOracle(t){return this.client.post("oracles",t)}fetchTokens(t){return this.client.get("tokens",t||{})}fetchTokenDetails(t){return this.client.get("tokens/"+t,{})}createToken(t){return this.client.post("tokens",t)}createTransaction(t){return this.client.post("transactions",t)}fetchTransactions(t){return this.client.get("transactions",t||{})}fetchTransactionDetails(t){return this.client.get("transactions/"+t,{})}fetchWallets(t){return this.client.get("wallets",t||{})}fetchWalletAccounts(t){return this.client.get(`wallets/${t}/accounts`,{})}fetchWalletDetails(t){return this.client.get("wallets/"+t,{})}createWallet(t){return this.client.post("wallets",t)}}i.DEFAULT_HOST="nchain.provide.services";const s=(t,e,n,r)=>i.clientFactory(t,e,n,r)}).call(this,n(3))},function(t,e,n){"use strict";(function(t){n.d(e,"a",(function(){return i})),n.d(e,"b",(function(){return s}));var r=n(0);class i{constructor(t,e,n,s){n||(n=i.DEFAULT_HOST),this.client=new r.a(t,e,n,s)}static clientFactory(e,n,s,o){const c=n||(t.env.VAULT_API_SCHEME||"https"),a=s||(t.env.VAULT_API_HOST||i.DEFAULT_HOST),u=o||(t.env.VAULT_API_PATH||r.a.DEFAULT_PATH);return new i(e,c,a,u)}createVault(t){return this.client.post("vaults",t)}fetchVaults(t){return this.client.get("vaults",t)}fetchVaultKeys(t,e){return this.client.get(`vaults/${t}/keys`,e)}createVaultKey(t,e){return this.client.post(`vaults/${t}/keys`,e)}deleteVaultKey(t,e){return this.client.delete(`vaults/${t}/keys/${e}`)}encrypt(t,e,n){return this.client.post(`vaults/${t}/keys/${e}/encrypt`,{message:n})}decrypt(t,e,n){return this.client.post(`vaults/${t}/keys/${e}/decrypt`,{message:n})}signMessage(t,e,n){return this.client.post(`vaults/${t}/keys/${e}/sign`,{message:n})}verifySignature(t,e,n,r){return this.client.post(`vaults/${t}/keys/${e}/verify`,{message:n,signature:r})}fetchVaultSecrets(t,e){return this.client.get(`vaults/${t}/secrets`,e)}createVaultSecret(t,e){return this.client.post(`vaults/${t}/secrets`,e)}deleteVaultSecret(t,e){return this.client.delete(`vaults/${t}/secrets/${e}`)}}i.DEFAULT_HOST="vault.provide.services";const s=(t,e,n,r)=>i.clientFactory(t,e,n,r)}).call(this,n(3))},function(t,e){t.exports=require("@provide/types")},function(t,e){t.exports=require("ipfs-http-client")},function(t,e){t.exports=require("mime-types")},function(t,e){t.exports=require("ts-natsutil")},function(t,e,n){"use strict";n.r(e),n.d(e,"ApiClient",(function(){return r.a})),n.d(e,"ApiClientResponse",(function(){return r.b})),n.d(e,"IpfsClient",(function(){return r.c})),n.d(e,"NatsClientFacade",(function(){return r.d})),n.d(e,"RpcClient",(function(){return r.e})),n.d(e,"Capabilities",(function(){return o})),n.d(e,"capabilitiesFactory",(function(){return c})),n.d(e,"Ident",(function(){return a.a})),n.d(e,"identClientFactory",(function(){return a.b})),n.d(e,"NChain",(function(){return u.a})),n.d(e,"nchainClientFactory",(function(){return u.b})),n.d(e,"Vault",(function(){return l.a})),n.d(e,"vaultClientFactory",(function(){return l.b}));var r=n(0),i=n(1),s=n.n(i);class o{constructor(t){this.manifestUrl=t||o.capabilitiesManifestUrl}async fetch(){return s.a.get(this.manifestUrl).then(t=>{200===t.status&&(this.capabilities=t.data)})}getBaselineRegistryContracts(){var t;if(this.capabilities)return null===(t=this.capabilities.baseline)||void 0===t?void 0:t.contracts}getRegistryContracts(){var t;if(this.capabilities)return null===(t=this.capabilities.message_bus)||void 0===t?void 0:t.registry_contracts}}o.capabilitiesManifestUrl="https://s3.amazonaws.com/static.provide.services/capabilities/provide-capabilities-manifest.json";const c=()=>{const t=new o;return t.fetch(),t};var a=n(2),u=n(4),l=n(5)}])}));