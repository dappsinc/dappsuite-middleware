import { ResolveCallback, ZoKratesProvider } from 'zokrates-js';
import { IZKSnarkCircuitProvider, IZKSnarkCompilationArtifacts, IZKSnarkWitnessComputation, IZKSnarkTrustedSetupArtifacts } from '.';
export declare class ZoKratesService implements IZKSnarkCircuitProvider {
    private importResolver;
    private zokrates;
    constructor(zokrates: ZoKratesProvider, importResolver: ResolveCallback);
    compile(source: string, location: string): Promise<IZKSnarkCompilationArtifacts>;
    computeWitness(artifacts: IZKSnarkCompilationArtifacts, args: any[]): Promise<IZKSnarkWitnessComputation>;
    exportVerifier(verifyingKey: any): Promise<string>;
    generateProof(circuit: any, witness: string, provingKey: any): Promise<any>;
    setup(circuit: any): Promise<IZKSnarkTrustedSetupArtifacts>;
}
export declare const zokratesServiceFactory: (config?: any) => Promise<ZoKratesService>;
//# sourceMappingURL=zokrates.d.ts.map