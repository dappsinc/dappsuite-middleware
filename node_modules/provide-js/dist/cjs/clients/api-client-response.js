"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApiClientResponse = void 0;
const types_1 = require("@provide/types");
class ApiClientResponse {
    constructor(query, requestBody, requestHeaders, responseBody, responseHeaders, xhr) {
        this.query = query;
        this.requestBody = requestBody;
        this.responseBody = responseBody;
        this.responseHeaders = responseHeaders;
        this.xhr = xhr;
        let requestHeadersString = '';
        Object.keys(requestHeaders).forEach((header) => {
            requestHeadersString += `${header}: ${requestHeaders[header]}\n`;
        });
        if (requestHeadersString !== '') {
            this.requestHeaders = requestHeadersString;
        }
    }
    unmarshalResponse(clazz) {
        let response;
        const contentLength = this.xhr.getResponseHeader('content-length');
        if (clazz !== null && contentLength !== null && parseInt(contentLength, 10) >= 2) {
            const retval = types_1.unmarshal(this.responseBody, clazz);
            if (retval != null) {
                response = retval;
            }
        }
        return response;
    }
}
exports.ApiClientResponse = ApiClientResponse;
//# sourceMappingURL=api-client-response.js.map